apply plugin: 'com.android.application'

apply plugin: 'androidx.navigation.safeargs'


android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.simorgh.pregnancyapp"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        // Enabling multidex support.
        multiDexEnabled true
        vectorDrawables.useSupportLibrary true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    configurations {
        cleanedAnnotations
        compile.exclude group: 'org.jetbrains', module: 'annotations'
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha02'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    Default()
    Calligraphy()
    RxJava()
    Gson()
    Room()
    Stetho()
    TransitionEveryWhere()
    HtmlTextView()
    LeakCanary()
    importModules()
    Dagger()
    //    implementation 'com.google.android:flexbox:1.1.0'
    //    implementation 'com.github.rubensousa:gravitysnaphelper:2.0'
    butterKnife()
    //    debugImplementation 'com.amitshekhar.android:debug-db:1.0.5'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation project(':persianmaterialdatepicker')
}

private void butterKnife() {
    dependencies.implementation 'com.jakewharton:butterknife:10.1.0'
    dependencies.annotationProcessor 'com.jakewharton:butterknife-compiler:10.1.0'
}

private void importModules() {
    dependencies.implementation project(':database')
    dependencies.implementation project(':threadutils')
    dependencies.implementation project(':logger')
    dependencies.implementation project(':nicedatepicker')
    dependencies.implementation project(':calendarutil')
    dependencies.implementation project(':bloodtypepicker')
    dependencies.implementation project(':bottombar')
    dependencies.implementation project(':expandablelayout')
    dependencies.implementation project(':fluidslider')
    dependencies.implementation project(':timelineview')
    dependencies.implementation project(':weekslider')
}

private Dependency HtmlTextView() {
    dependencies.implementation 'org.sufficientlysecure:html-textview:3.6'
}

private Dependency TransitionEveryWhere() {
    dependencies.implementation 'com.andkulikov:transitionseverywhere:2.0.0-alpha01'
}

private void LeakCanary() {
    dependencies.debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.3'
    dependencies.releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.3'
    // Optional, if you use support library fragments:
    dependencies.debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.3'
    dependencies.androidTestImplementation 'androidx.test:rules:1.1.2-alpha01'
}

private void Calligraphy() {
    //Calligraphy
    dependencies.implementation 'io.github.inflationx:calligraphy3:3.0.0'
    dependencies.implementation 'io.github.inflationx:viewpump:1.0.0'
}

private Dependency Stetho() {
    dependencies.implementation 'com.facebook.stetho:stetho:1.5.0'
}

private Dependency Gson() {
    dependencies.implementation 'com.google.code.gson:gson:2.8.5'
}

private void RxJava() {
    //RX
    dependencies.implementation 'io.reactivex.rxjava2:rxjava:2.2.2'
    dependencies.implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
}

private void Default() {
    dependencies.implementation 'androidx.cardview:cardview:1.0.0'
    dependencies.implementation 'androidx.appcompat:appcompat:1.1.0-alpha02'
    dependencies.implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha3'
    dependencies.implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    dependencies.implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0-alpha02'
    dependencies.implementation 'androidx.appcompat:appcompat:1.1.0-alpha02'
    dependencies.implementation 'com.google.android.material:material:1.1.0-alpha03'
    dependencies.testImplementation 'junit:junit:4.12'
    dependencies.androidTestImplementation 'androidx.test:runner:1.1.1'
    dependencies.androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    dependencies.implementation 'androidx.recyclerview:recyclerview:1.0.0'
    dependencies.implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    dependencies.implementation 'android.arch.navigation:navigation-fragment:1.0.0-beta02'
    dependencies.implementation 'android.arch.navigation:navigation-ui:1.0.0-beta02'
    dependencies.implementation 'androidx.core:core:1.0.1'
}

private void Dagger() {
    //dagger
    dependencies.implementation 'com.google.dagger:dagger:2.21'
    dependencies.implementation 'com.google.dagger:dagger-android:2.21'
    dependencies.annotationProcessor 'com.google.dagger:dagger-compiler:2.21'
    dependencies.annotationProcessor 'com.google.dagger:dagger-android-processor:2.21'
}

private void Room() {
    // Room
    // RxJava support for Room
    dependencies.implementation 'androidx.room:room-rxjava2:2.1.0-alpha04'
    // ReactiveStreams support for LiveData
    dependencies.implementation 'androidx.lifecycle:lifecycle-reactivestreams:2.0.0'
    dependencies.implementation "androidx.room:room-runtime:$rootProject.roomVersion"
    dependencies.annotationProcessor "androidx.room:room-compiler:$rootProject.roomVersion"
    dependencies.androidTestImplementation "androidx.room:room-testing:$rootProject.roomVersion"
    // Lifecycle components
    dependencies.implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.archLifecycleVersion"
    dependencies.annotationProcessor "androidx.lifecycle:lifecycle-compiler:$rootProject.archLifecycleVersion"
}
